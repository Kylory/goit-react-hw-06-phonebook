{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css","components/SearchContacts/SearchContacts.module.css","components/redux/actions.js","components/redux/store.js","components/redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.jsx","components/SearchContacts/SearchContacts.jsx","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","filterContacts","contactsReducer","createReducer","JSON","parse","window","localStorage","getItem","state","filter","contact","filterReducer","_","rootReducer","combineReducers","contacts","store","configureStore","reducer","getContacts","getFilter","getFilteredContacts","normalizedFilter","toLowerCase","includes","ContactForm","useState","stateName","setStateName","stateNumber","setStateNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","reset","className","styles","contactForm","onSubmit","preventDefault","find","alert","setItem","stringify","type","onChange","ContactsList","map","onClick","SearchContacts","searchContacts","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,eAAiB,yC,yJCE7BC,EAAaC,YAAa,mBAAmB,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CACxEC,QAAS,CACPC,GAAIC,IAAQC,WACZL,KAAMA,EACNC,OAAQA,OAINK,EAAgBP,YAAa,sBAE7BQ,EAAiBR,YAAa,+BCT9BS,EAAkBC,YAAa,UACnCC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBADJ,QACoB,IADpB,mBAGhChB,GAAa,SAACiB,EAAD,OAAUb,EAAV,EAAUA,QAAV,4BAA4Ba,GAA5B,CAAmCb,OAHhB,cAIhCI,GAAgB,SAACS,EAAD,OAAUb,EAAV,EAAUA,QAAV,OACfa,EAAMC,QAAO,SAAAC,GAAO,OAAIA,EAAQd,KAAOD,QALR,IAS/BgB,EAAgBT,YAAc,GAAD,eAChCF,GAAiB,SAACY,EAAD,YAAMjB,YAGpBkB,EAAcC,YAAgB,CAClCC,SAAUd,EACVQ,OAAQE,IAOKK,EAJDC,YAAe,CAC3BC,QAASL,I,QCvBLM,EAAc,SAAAX,GAAK,OAAIA,EAAMO,UAC7BK,EAAY,SAAAZ,GAAK,OAAIA,EAAMC,QAE3BY,EAAsB,SAAAb,GAC1B,IAAMO,EAAWI,EAAYX,GACvBC,EAASW,EAAUZ,GAEzB,GAAIO,GAAYN,EAAQ,CACtB,IAAMa,EAAmBb,EAAOc,cAIhC,OAHwBR,EAASN,QAAO,SAAAC,GAAO,OAC7CA,EAAQjB,KAAK8B,cAAcC,SAASF,MAIxC,OAAOP,G,wBCRM,SAASU,IACtB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEMf,EAAWgB,YAAYZ,GACvBa,EAAWC,cAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlB3C,EAAR,EAAQA,KAAM4C,EAAd,EAAcA,MACd,OAAQ5C,GACN,IAAK,OACHmC,EAAaS,GACb,MAEF,IAAK,SACHP,EAAeO,KAwBfC,EAAQ,WACZV,EAAa,IACbE,EAAe,KAGjB,OACE,uBAAMS,UAAWC,IAAOC,YAAaC,SAtBlB,SAAAP,GAGnB,OAFAA,EAAEQ,iBAEE5B,GAAYA,EAAS6B,MAAK,SAAAlC,GAAO,OAAIA,EAAQjB,OAASkC,KACjDkB,MAAMlB,EAAY,2BACfA,EAEAE,GAIZG,EAASzC,EAAW,CAAEE,KAAMkC,EAAWjC,OAAQmC,KAC/CxB,OAAOC,aAAawC,QAAQ,WAAY3C,KAAK4C,UAAUhC,SACvDuB,KALSO,MAAM,oBAFNA,MAAM,mBAgBf,UACE,yCAEE,uBACEpD,KAAK,OACLuD,KAAK,OACLX,MAAOV,EACPsB,SAAUf,OAId,2CAEE,uBACEzC,KAAK,SACLuD,KAAK,OACLX,MAAOR,EACPoB,SAAUf,OAId,wBAAQc,KAAK,SAAb,4B,qBClES,SAASE,IACtB,IAAMnC,EAAWgB,YAAYV,GAE7BhB,OAAOC,aAAawC,QAAQ,WAAY3C,KAAK4C,UAAUhC,IAEvD,IAAMiB,EAAWC,cAEjB,OACE,oBAAIM,UAAWC,IAAOU,aAAtB,SACGnC,EAASoC,KAAI,SAAAzC,GAAO,OACnB,+BACGA,EAAQjB,KACR,KACAiB,EAAQhB,OACT,wBAAQ0D,QAAS,kBAAMpB,EAASjC,EAAcW,EAAQd,MAAtD,sBAJOc,EAAQd,S,qBCXV,SAASyD,IACtB,IAAM5C,EAASsB,YAAYX,GACrBY,EAAWC,cAEjB,OACE,wBAAOM,UAAWC,IAAOc,eAAzB,kCAEE,uBACE7D,KAAK,SACLuD,KAAK,OACLX,MAAO5B,EACPwC,SAAU,SAAAd,GAAC,OAAIH,EAAShC,EAAemC,EAAEC,OAAOC,cCZxD,IAYekB,EAZH,WACV,OACE,qCACE,2CACA,cAAC9B,EAAD,IACA,0CACA,cAAC4B,EAAD,IACA,cAACH,EAAD,Q,YCFNM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU1C,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ2C,SAASC,eAAe,W","file":"static/js/main.379b9f37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1XFIJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsList\":\"ContactsList_ContactsList__13Qd3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContacts\":\"SearchContacts_searchContacts__1qVSt\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = createAction('form/addContact', ({ name, number }) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name: name,\r\n    number: number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('form/deleteContact');\r\n\r\nconst filterContacts = createAction('contactsList/filterContacts');\r\n\r\nexport { addContact, deleteContact, filterContacts };\r\n","import { combineReducers } from 'redux';\r\nimport { configureStore, createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, filterContacts } from '../redux/actions';\r\n\r\nconst contactsReducer = createReducer(\r\n  JSON.parse(window.localStorage.getItem('contacts')) ?? [],\r\n  {\r\n    [addContact]: (state, { payload }) => [...state, payload],\r\n    [deleteContact]: (state, { payload }) =>\r\n      state.filter(contact => contact.id !== payload),\r\n  },\r\n);\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","const getContacts = state => state.contacts;\r\nconst getFilter = state => state.filter;\r\n\r\nconst getFilteredContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  if (contacts && filter) {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    const filteredContact = contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n    return filteredContact;\r\n  }\r\n  return contacts;\r\n};\r\n\r\nexport { getContacts, getFilter, getFilteredContacts };\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addContact } from '../redux/actions';\r\nimport { getContacts } from '../redux/selectors';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [stateName, setStateName] = useState('');\r\n  const [stateNumber, setStateNumber] = useState('');\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setStateName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setStateNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (contacts && contacts.find(contact => contact.name === stateName)) {\r\n      return alert(stateName + ' is already in contacts');\r\n    } else if (!stateName) {\r\n      return alert('Type some name');\r\n    } else if (!stateNumber) {\r\n      return alert('Type some number');\r\n    }\r\n\r\n    dispatch(addContact({ name: stateName, number: stateNumber }));\r\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setStateName('');\r\n    setStateNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={styles.contactForm} onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={stateName}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Number\r\n        <input\r\n          name=\"number\"\r\n          type=\"text\"\r\n          value={stateNumber}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../redux/actions';\r\nimport { getFilteredContacts } from '../redux/selectors';\r\n// import setToLS from './getFromLS';\r\nimport styles from './ContactsList.module.css';\r\n\r\nexport default function ContactsList() {\r\n  const contacts = useSelector(getFilteredContacts);\r\n  //Пушить актуальний список контаків в LS\r\n  window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className={styles.ContactsList}>\r\n      {contacts.map(contact => (\r\n        <li key={contact.id}>\r\n          {contact.name}\r\n          {': '}\r\n          {contact.number}\r\n          <button onClick={() => dispatch(deleteContact(contact.id))}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { filterContacts } from '../redux/actions';\r\nimport { getFilter } from '../redux/selectors';\r\nimport styles from './SearchContacts.module.css';\r\n\r\nexport default function SearchContacts() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={styles.searchContacts}>\r\n      Find contacts by name\r\n      <input\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={e => dispatch(filterContacts(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactsList from './components/ContactsList/ContactsList';\r\nimport SearchContacts from './components/SearchContacts/SearchContacts';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <h2>Phonebook</h2>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <SearchContacts />\r\n      <ContactsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './components/redux/store';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}